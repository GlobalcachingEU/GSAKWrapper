<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Archived" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="Attributes" xml:space="preserve">
    <value>Attributes</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangedDate" xml:space="preserve">
    <value>Changed date</value>
  </data>
  <data name="ChildLoad" xml:space="preserve">
    <value>ChildLoad</value>
  </data>
  <data name="ClearUserFlag" xml:space="preserve">
    <value>Clear user flag</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="County" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created date</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Delete_flow_" xml:space="preserve">
    <value>Delete flow {0}?</value>
  </data>
  <data name="DidNotFind" xml:space="preserve">
    <value>DNF (Did Not Find)</value>
  </data>
  <data name="DidNotFindDate" xml:space="preserve">
    <value>DNF Date</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="DistanceFromCenterKm" xml:space="preserve">
    <value>Distance from center (km)</value>
  </data>
  <data name="DistanceFromLocationKm" xml:space="preserve">
    <value>Distance from location (km)</value>
  </data>
  <data name="Dutch" xml:space="preserve">
    <value>Nederlands</value>
  </data>
  <data name="Elevation" xml:space="preserve">
    <value>Elevation</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="ExportActiveFlow" xml:space="preserve">
    <value>Export active flow</value>
  </data>
  <data name="ExportAllFlows" xml:space="preserve">
    <value>Export all flows</value>
  </data>
  <data name="FavPoints" xml:space="preserve">
    <value>Favorite points</value>
  </data>
  <data name="Found" xml:space="preserve">
    <value>Found</value>
  </data>
  <data name="FoundByMeDate" xml:space="preserve">
    <value>Found by me date</value>
  </data>
  <data name="FoundCount" xml:space="preserve">
    <value>Found count</value>
  </data>
  <data name="FTF" xml:space="preserve">
    <value>FTF (First To Find)</value>
  </data>
  <data name="GCNote" xml:space="preserve">
    <value>GC note</value>
  </data>
  <data name="GeocacheContainer" xml:space="preserve">
    <value>Geocache container</value>
  </data>
  <data name="GeocacheType" xml:space="preserve">
    <value>Geocache type</value>
  </data>
  <data name="HasCorrected" xml:space="preserve">
    <value>Has corrected</value>
  </data>
  <data name="HasTravelBug" xml:space="preserve">
    <value>Has travel bug (TB/Coin)</value>
  </data>
  <data name="HasUserNote" xml:space="preserve">
    <value>Has user note</value>
  </data>
  <data name="ImportFlows" xml:space="preserve">
    <value>Import flows</value>
  </data>
  <data name="IsOwner" xml:space="preserve">
    <value>Is owner</value>
  </data>
  <data name="IsPremium" xml:space="preserve">
    <value>IsPremium (PMO)</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastLogDate" xml:space="preserve">
    <value>Last log date</value>
  </data>
  <data name="LastFoundDate" xml:space="preserve">
    <value>Last found date</value>
  </data>
  <data name="LastGPXDate" xml:space="preserve">
    <value>Last GPX date</value>
  </data>
  <data name="LastUserDate" xml:space="preserve">
    <value>Last user date</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="LongHtm" xml:space="preserve">
    <value>Long Htm</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="MacroFlag" xml:space="preserve">
    <value>MacroFlag</value>
  </data>
  <data name="MainWindowTitle" xml:space="preserve">
    <value>GSAK Wrapper</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameContains" xml:space="preserve">
    <value>Geocache name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NumberOfLogs" xml:space="preserve">
    <value>Number of logs</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OriginalText" xml:space="preserve">
    <value>Original text</value>
  </data>
  <data name="Overwrite_flow_" xml:space="preserve">
    <value>Overwrite flow {0}?</value>
  </data>
  <data name="OwnerName" xml:space="preserve">
    <value>Owner name</value>
  </data>
  <data name="PlacedBy" xml:space="preserve">
    <value>Placed by</value>
  </data>
  <data name="PlacedDate" xml:space="preserve">
    <value>Placed date</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="SetUserFlag" xml:space="preserve">
    <value>Set user flag</value>
  </data>
  <data name="ShortHtm" xml:space="preserve">
    <value>Short Htm</value>
  </data>
  <data name="SmartNameContains" xml:space="preserve">
    <value>Smart name</value>
  </data>
  <data name="SmartOverride" xml:space="preserve">
    <value>Smart override</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Symbol" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="TempDisabled" xml:space="preserve">
    <value>Temporarily disabled</value>
  </data>
  <data name="Terrain" xml:space="preserve">
    <value>Terrain</value>
  </data>
  <data name="UserFlag" xml:space="preserve">
    <value>User flag</value>
  </data>
  <data name="UserNoteDate" xml:space="preserve">
    <value>User note date</value>
  </data>
  <data name="Watch" xml:space="preserve">
    <value>Watch</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Select folder</value>
  </data>
  <data name="SelectRootDataFolder" xml:space="preserve">
    <value>Select root data folder</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Wiki" xml:space="preserve">
    <value>Wiki</value>
  </data>
  <data name="Children" xml:space="preserve">
    <value>Children</value>
  </data>
  <data name="CopyToDatabase" xml:space="preserve">
    <value>Copy to database</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Dates</value>
  </data>
  <data name="DeleteFromDatabase" xml:space="preserve">
    <value>Delete from database</value>
  </data>
  <data name="EmptyDatabase" xml:space="preserve">
    <value>Delete all geocaches</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FinishedFlow" xml:space="preserve">
    <value>Finished flow</value>
  </data>
  <data name="FinishingAction" xml:space="preserve">
    <value>Finishing action</value>
  </data>
  <data name="FlowFinishedIn" xml:space="preserve">
    <value>Flow {0} finished in {1} seconds</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="PreparingAction" xml:space="preserve">
    <value>Preparing action</value>
  </data>
  <data name="StartingFlow" xml:space="preserve">
    <value>Starting flow</value>
  </data>
  <data name="Where" xml:space="preserve">
    <value>Where</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="ExecuteOnce" xml:space="preserve">
    <value>Execute once</value>
  </data>
  <data name="OverwriteExistingData" xml:space="preserve">
    <value>Overwrite existing data</value>
  </data>
  <data name="RunningAction" xml:space="preserve">
    <value>Running action</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="CompareTo" xml:space="preserve">
    <value>Compare to</value>
  </data>
  <data name="CompareTwoDates" xml:space="preserve">
    <value>Compare two dates</value>
  </data>
  <data name="GeocacheCode" xml:space="preserve">
    <value>Geocache code</value>
  </data>
  <data name="ChildWaypoints" xml:space="preserve">
    <value>Child Waypoints</value>
  </data>
  <data name="ChildWaypointCode" xml:space="preserve">
    <value>Child Waypoint code</value>
  </data>
  <data name="ChildWaypointPrefix" xml:space="preserve">
    <value>Child Waypoint prefix</value>
  </data>
  <data name="ChildWaypointType" xml:space="preserve">
    <value>Child Waypoint type</value>
  </data>
</root>