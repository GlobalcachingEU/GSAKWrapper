<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Archived" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="Attributes" xml:space="preserve">
    <value>Attributes</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangedDate" xml:space="preserve">
    <value>Changed date</value>
  </data>
  <data name="ChildLoad" xml:space="preserve">
    <value>ChildLoad</value>
  </data>
  <data name="ClearUserFlag" xml:space="preserve">
    <value>Clear user flag</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="County" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="CreatedDate" xml:space="preserve">
    <value>Created date</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Delete_flow_" xml:space="preserve">
    <value>Delete flow {0}?</value>
  </data>
  <data name="DidNotFind" xml:space="preserve">
    <value>DNF (Did Not Find)</value>
  </data>
  <data name="DidNotFindDate" xml:space="preserve">
    <value>DNF Date</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="DistanceFromCenterKm" xml:space="preserve">
    <value>Distance from center (km)</value>
  </data>
  <data name="DistanceFromLocationKm" xml:space="preserve">
    <value>Distance from location (km)</value>
  </data>
  <data name="Dutch" xml:space="preserve">
    <value>Nederlands</value>
  </data>
  <data name="Elevation" xml:space="preserve">
    <value>Elevation</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="ExportActiveFlow" xml:space="preserve">
    <value>Export active flow</value>
  </data>
  <data name="ExportAllFlows" xml:space="preserve">
    <value>Export all flows</value>
  </data>
  <data name="FavPoints" xml:space="preserve">
    <value>Favorite points</value>
  </data>
  <data name="Found" xml:space="preserve">
    <value>Found</value>
  </data>
  <data name="FoundByMeDate" xml:space="preserve">
    <value>Found by me date</value>
  </data>
  <data name="FoundCount" xml:space="preserve">
    <value>Found count</value>
  </data>
  <data name="FTF" xml:space="preserve">
    <value>FTF (First To Find)</value>
  </data>
  <data name="GCNote" xml:space="preserve">
    <value>GC note</value>
  </data>
  <data name="GeocacheContainer" xml:space="preserve">
    <value>Geocache container</value>
  </data>
  <data name="GeocacheType" xml:space="preserve">
    <value>Geocache type</value>
  </data>
  <data name="HasCorrected" xml:space="preserve">
    <value>Has corrected</value>
  </data>
  <data name="HasTravelBug" xml:space="preserve">
    <value>Has travel bug (TB/Coin)</value>
  </data>
  <data name="HasUserNote" xml:space="preserve">
    <value>Has user note</value>
  </data>
  <data name="ImportFlows" xml:space="preserve">
    <value>Import flows</value>
  </data>
  <data name="IsOwner" xml:space="preserve">
    <value>Is owner</value>
  </data>
  <data name="IsPremium" xml:space="preserve">
    <value>IsPremium (PMO)</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastLogDate" xml:space="preserve">
    <value>Last log date</value>
  </data>
  <data name="LastFoundDate" xml:space="preserve">
    <value>Last found date</value>
  </data>
  <data name="LastGPXDate" xml:space="preserve">
    <value>Last GPX date</value>
  </data>
  <data name="LastUserDate" xml:space="preserve">
    <value>Last user date</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="LongHtm" xml:space="preserve">
    <value>Long Htm</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="MacroFlag" xml:space="preserve">
    <value>MacroFlag</value>
  </data>
  <data name="MainWindowTitle" xml:space="preserve">
    <value>GSAK Wrapper</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameContains" xml:space="preserve">
    <value>Geocache name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NumberOfLogs" xml:space="preserve">
    <value>Number of logs</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OriginalText" xml:space="preserve">
    <value>Original text</value>
  </data>
  <data name="Overwrite_flow_" xml:space="preserve">
    <value>Overwrite flow {0}?</value>
  </data>
  <data name="OwnerName" xml:space="preserve">
    <value>Owner name</value>
  </data>
  <data name="PlacedBy" xml:space="preserve">
    <value>Placed by</value>
  </data>
  <data name="PlacedDate" xml:space="preserve">
    <value>Placed date</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="SetUserFlag" xml:space="preserve">
    <value>Set user flag</value>
  </data>
  <data name="ShortHtm" xml:space="preserve">
    <value>Short Htm</value>
  </data>
  <data name="SmartNameContains" xml:space="preserve">
    <value>Smart name</value>
  </data>
  <data name="SmartOverride" xml:space="preserve">
    <value>Smart override</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Symbol" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="TempDisabled" xml:space="preserve">
    <value>Temporarily disabled</value>
  </data>
  <data name="Terrain" xml:space="preserve">
    <value>Terrain</value>
  </data>
  <data name="UserFlag" xml:space="preserve">
    <value>User flag</value>
  </data>
  <data name="UserNoteDate" xml:space="preserve">
    <value>User note date</value>
  </data>
  <data name="Watch" xml:space="preserve">
    <value>Watch</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New folder</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="SelectFolder" xml:space="preserve">
    <value>Select folder</value>
  </data>
  <data name="SelectRootDataFolder" xml:space="preserve">
    <value>Select root data folder</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Wiki" xml:space="preserve">
    <value>Wiki</value>
  </data>
  <data name="Children" xml:space="preserve">
    <value>Children</value>
  </data>
  <data name="CopyToDatabase" xml:space="preserve">
    <value>Copy to database</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Dates</value>
  </data>
  <data name="DeleteFromDatabase" xml:space="preserve">
    <value>Delete from database</value>
  </data>
  <data name="EmptyDatabase" xml:space="preserve">
    <value>Delete all geocaches</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FinishedFlow" xml:space="preserve">
    <value>Finished flow</value>
  </data>
  <data name="FinishingAction" xml:space="preserve">
    <value>Finishing action</value>
  </data>
  <data name="FlowFinishedIn" xml:space="preserve">
    <value>Flow {0} finished in {1} seconds</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="Logs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="PreparingAction" xml:space="preserve">
    <value>Preparing action</value>
  </data>
  <data name="StartingFlow" xml:space="preserve">
    <value>Starting flow</value>
  </data>
  <data name="Where" xml:space="preserve">
    <value>Where</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="ExecuteOnce" xml:space="preserve">
    <value>Execute once</value>
  </data>
  <data name="OverwriteExistingData" xml:space="preserve">
    <value>Overwrite existing data</value>
  </data>
  <data name="RunningAction" xml:space="preserve">
    <value>Running action</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="CompareTo" xml:space="preserve">
    <value>Compare to</value>
  </data>
  <data name="CompareTwoDates" xml:space="preserve">
    <value>Compare two dates</value>
  </data>
  <data name="GeocacheCode" xml:space="preserve">
    <value>Geocache code</value>
  </data>
  <data name="ChildWaypoints" xml:space="preserve">
    <value>Child Waypoints</value>
  </data>
  <data name="ChildWaypointCode" xml:space="preserve">
    <value>Child Waypoint code</value>
  </data>
  <data name="ChildWaypointPrefix" xml:space="preserve">
    <value>Child Waypoint prefix</value>
  </data>
  <data name="ChildWaypointType" xml:space="preserve">
    <value>Child Waypoint type</value>
  </data>
  <data name="ChildWaypointLatitude" xml:space="preserve">
    <value>Child Waypoint latitude</value>
  </data>
  <data name="ChildWaypointLongitude" xml:space="preserve">
    <value>Child Waypoint longitude</value>
  </data>
  <data name="ChildWaypointDistanceFromLocationKm" xml:space="preserve">
    <value>Child distance from location (km)</value>
  </data>
  <data name="ChildWaypointByUser" xml:space="preserve">
    <value>Child Waypoint by user</value>
  </data>
  <data name="ChildWaypointDate" xml:space="preserve">
    <value>Child Waypoint date</value>
  </data>
  <data name="ChildWaypointFlag" xml:space="preserve">
    <value>Child Waypoint flag</value>
  </data>
  <data name="ChildWaypointComment" xml:space="preserve">
    <value>Child Waypoint comment</value>
  </data>
  <data name="LogType" xml:space="preserve">
    <value>Log type</value>
  </data>
  <data name="LogByUser" xml:space="preserve">
    <value>Logged by user</value>
  </data>
  <data name="ChildWaypointName" xml:space="preserve">
    <value>Child Waypoint name</value>
  </data>
  <data name="LogTypeByUser" xml:space="preserve">
    <value>Log type by user</value>
  </data>
  <data name="LogDate" xml:space="preserve">
    <value>Log date</value>
  </data>
  <data name="LogDateByUser" xml:space="preserve">
    <value>Log date by user</value>
  </data>
  <data name="NewVersionAvailable" xml:space="preserve">
    <value>New version available</value>
  </data>
  <data name="LogEncoded" xml:space="preserve">
    <value>Log encoded</value>
  </data>
  <data name="LogText" xml:space="preserve">
    <value>Log text</value>
  </data>
  <data name="InIgnoreListOfDatabase" xml:space="preserve">
    <value>In ignore list of other database</value>
  </data>
  <data name="Extra" xml:space="preserve">
    <value>Extra</value>
  </data>
  <data name="PresentInOtherDatabase" xml:space="preserve">
    <value>Present in other database</value>
  </data>
  <data name="UserFlagInOtherDatabase" xml:space="preserve">
    <value>User flag set in other database</value>
  </data>
  <data name="UserDataText" xml:space="preserve">
    <value>User data text</value>
  </data>
  <data name="UserDataNumber" xml:space="preserve">
    <value>User data numeric</value>
  </data>
  <data name="FlowSequenceFinishedIn" xml:space="preserve">
    <value>Flow sequence {0} finished in {1} seconds</value>
  </data>
  <data name="FlowSequences" xml:space="preserve">
    <value>Flow sequences</value>
  </data>
  <data name="AddFlow" xml:space="preserve">
    <value>Add flow</value>
  </data>
  <data name="EditFlowSequences" xml:space="preserve">
    <value>Edit flow sequences</value>
  </data>
  <data name="FlowName" xml:space="preserve">
    <value>Flow name</value>
  </data>
  <data name="NewFlowSequence" xml:space="preserve">
    <value>New flow sequence</value>
  </data>
  <data name="Flows" xml:space="preserve">
    <value>Flows</value>
  </data>
  <data name="FlowDatabaseWithinSequence" xml:space="preserve">
    <value>The database to execute the flow on.
Leave empty to use the default database of the sequence.</value>
  </data>
  <data name="LeaveEmptyForActiveDatabase" xml:space="preserve">
    <value>Default database to execute flows on.
Leave empty to use the active database.</value>
  </data>
  <data name="AddToIgnoreList" xml:space="preserve">
    <value>Add to ignore list</value>
  </data>
  <data name="InstallDefaultGSAKWrapperMacro" xml:space="preserve">
    <value>Install default GSAK Wrapper macro</value>
  </data>
  <data name="InstallMacroForThisFlow" xml:space="preserve">
    <value>Install GSAK macro for this flow</value>
  </data>
  <data name="Macro" xml:space="preserve">
    <value>Macro</value>
  </data>
  <data name="InstallMacroForThisSequence" xml:space="preserve">
    <value>Install GSAK macro for this sequence</value>
  </data>
  <data name="CustomNumber" xml:space="preserve">
    <value>Custom numeric field</value>
  </data>
  <data name="CustomText" xml:space="preserve">
    <value>Custom text field</value>
  </data>
  <data name="GeocacheCountLimit" xml:space="preserve">
    <value>Geocache counter</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="CreatingFile" xml:space="preserve">
    <value>Creating file...</value>
  </data>
  <data name="ExportGPX" xml:space="preserve">
    <value>Export GPX</value>
  </data>
  <data name="ExportingGPX" xml:space="preserve">
    <value>Exporting GPX...</value>
  </data>
  <data name="AddChildWaypoints" xml:space="preserve">
    <value>Add child waypoints</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="GPXSettings" xml:space="preserve">
    <value>GPX settings</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="CustomDate" xml:space="preserve">
    <value>Custom date field</value>
  </data>
  <data name="ExportGGZ" xml:space="preserve">
    <value>Export GGZ</value>
  </data>
  <data name="SetMacroFlag" xml:space="preserve">
    <value>Set macro flag</value>
  </data>
  <data name="ClearMacroFlag" xml:space="preserve">
    <value>Clear macro flag</value>
  </data>
  <data name="FormulaSolver" xml:space="preserve">
    <value>Formula solver</value>
  </data>
  <data name="Functions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="InstallMacroForFormulaSolver" xml:space="preserve">
    <value>Install macro for formula solver</value>
  </data>
  <data name="Geocache" xml:space="preserve">
    <value>Geocache</value>
  </data>
  <data name="AsWaypoint" xml:space="preserve">
    <value>As Waypoint</value>
  </data>
  <data name="BadParameterValue" xml:space="preserve">
    <value>{0}: Bad parameter value</value>
  </data>
  <data name="ContextGroup" xml:space="preserve">
    <value>Execution context functions</value>
  </data>
  <data name="CoordinateFunctions" xml:space="preserve">
    <value>Coordinate Functions</value>
  </data>
  <data name="DescrACos" xml:space="preserve">
    <value>Trigonometric function Inverse Cosine</value>
  </data>
  <data name="DescrAlphaPos" xml:space="preserve">
    <value>Position of the first character in the alphabet</value>
  </data>
  <data name="DescrAlphaSum" xml:space="preserve">
    <value>Sum of the positions of all characters in the alphabet</value>
  </data>
  <data name="DescrASin" xml:space="preserve">
    <value>Trigonometric function Inverse Sine</value>
  </data>
  <data name="DescrATan" xml:space="preserve">
    <value>Trigonometric function Inverse Tangent</value>
  </data>
  <data name="DescrBearing" xml:space="preserve">
    <value>Gives the bearing from coord1 to coord2
Bearing(coord1; coord2)</value>
  </data>
  <data name="DescrContext" xml:space="preserve">
    <value>Set options of execution context.
SetContext("Rad")</value>
  </data>
  <data name="DescrCos" xml:space="preserve">
    <value>Trigonometric function Cosine</value>
  </data>
  <data name="DescrCosH" xml:space="preserve">
    <value>Trigonometric function Hyperbolic Cosine</value>
  </data>
  <data name="DescrCrossBearing" xml:space="preserve">
    <value>Crossbearing between 2 points and 2 directions
Crossbearing(coord1; angle1; coord2; angle2)</value>
  </data>
  <data name="DescrCrossProduct" xml:space="preserve">
    <value>Product of all single numbers in the number.
Example: CP(1234) = 24</value>
  </data>
  <data name="DescrCrossTotal" xml:space="preserve">
    <value>Sum of all single numbers in the parameter.
Example: CT(654321) = 21</value>
  </data>
  <data name="DescrDistance" xml:space="preserve">
    <value>Gives the distance between coord1 and coord2 in meters
Distance(coord1; coord2)</value>
  </data>
  <data name="DescrFactorial" xml:space="preserve">
    <value>Compute the factorial of an integer.
Fact(10) = 3628800</value>
  </data>
  <data name="DescrICrossProduct" xml:space="preserve">
    <value>Iterated Crossproduct until result has only 1 digit.
Example: ICP(1234) = 8</value>
  </data>
  <data name="DescrICrossTotal" xml:space="preserve">
    <value>Iterated Crosstotal until result has only 1 digit.
Example: ICT(123456) = 3</value>
  </data>
  <data name="DescrInt" xml:space="preserve">
    <value>Gives the number before the decimal point
Int(-5.8) = -5</value>
  </data>
  <data name="DescrIntersection" xml:space="preserve">
    <value>Intersection of 2 Lines (coord1-coord2) with (coord3-coord4).
Intersection(coord1; coord2; coord3; coord4)</value>
  </data>
  <data name="DescrLatitude" xml:space="preserve">
    <value>Gets the latitude from a coordinate as decimal number.
Latitude("N 51° 12.081 E 6° 50.328") = 51.20135</value>
  </data>
  <data name="DescrLen" xml:space="preserve">
    <value>Numbers of characters in the string</value>
  </data>
  <data name="DescrLongitude" xml:space="preserve">
    <value>Gets the latitude from a coordinate as decimal number.
Longitude("N 51° 12.081 E 6° 50.328") = 6.8388</value>
  </data>
  <data name="DescrMid" xml:space="preserve">
    <value>Return a substring of a string. Parameter 3: Default=1
Mid(\"String\";StartPosition;[CharacterCount])</value>
  </data>
  <data name="DescrNoCacheSelected" xml:space="preserve">
    <value>No cache selected. (Quicknotes)</value>
  </data>
  <data name="DescrPhoneCode" xml:space="preserve">
    <value>Position of the first character on the phone keyboard</value>
  </data>
  <data name="DescrPhoneSum" xml:space="preserve">
    <value>Sum of the positions of all characters on the phone keyboard</value>
  </data>
  <data name="DescrPi" xml:space="preserve">
    <value>Gives the number Pi with n digits after decimal point
Pi(4) = 3.1415</value>
  </data>
  <data name="DescrPow" xml:space="preserve">
    <value>Compute the power of the first to the second parameter
Pow(2;10) = 1024</value>
  </data>
  <data name="DescrPrimeIndex" xml:space="preserve">
    <value>PrimeIndex(y) Gives the index of the prime number y.
Example: PrimeIndex(11) = 5</value>
  </data>
  <data name="DescrPrimeNumber" xml:space="preserve">
    <value>Primenumber(x) Gives the x-th prime number.
Example: Primenumber(5) = 11</value>
  </data>
  <data name="DescrProjection" xml:space="preserve">
    <value>Projection of Coordinate.
Projection(coord; length; angle)</value>
  </data>
  <data name="DescrReverse" xml:space="preserve">
    <value>Reverses the string
Reverse("ABC") = CBA</value>
  </data>
  <data name="DescrRom2Dec" xml:space="preserve">
    <value>Roman numerals to decimal</value>
  </data>
  <data name="DescrRot13" xml:space="preserve">
    <value>Gives the Rot13 encryption
Rot13("ABC") = NOP</value>
  </data>
  <data name="DescrRound" xml:space="preserve">
    <value>Rounds the number to x digits
Round(1.8672; 2) = 1.87</value>
  </data>
  <data name="DescrSin" xml:space="preserve">
    <value>Trigonometric function Sine</value>
  </data>
  <data name="DescrSinH" xml:space="preserve">
    <value>Trigonometric function Hyperbolic Sine</value>
  </data>
  <data name="DescrTan" xml:space="preserve">
    <value>Trigonometric function Tangent</value>
  </data>
  <data name="DescrTanH" xml:space="preserve">
    <value>Trigonometric function Hyperbolic Tangent</value>
  </data>
  <data name="DescrWaypoint" xml:space="preserve">
    <value>Get coordinates of a geocache waypoint by its name.
Waypoint("FN2Y73E") = "N 51° 12.345 E 006° 43.210"
No param gives cache coordinates.</value>
  </data>
  <data name="DivByZero" xml:space="preserve">
    <value>Division by zero</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="InsertFormula" xml:space="preserve">
    <value>Insert formula</value>
  </data>
  <data name="InsertWaypoint" xml:space="preserve">
    <value>Insert waypoint</value>
  </data>
  <data name="MissingArgument" xml:space="preserve">
    <value>{0}: Argument missing. (Min. {1})</value>
  </data>
  <data name="MissingVariables" xml:space="preserve">
    <value>Insert declarations for the missing variables:
{0}</value>
  </data>
  <data name="NoCrossing" xml:space="preserve">
    <value>No crossing</value>
  </data>
  <data name="NoProperCoordSelected" xml:space="preserve">
    <value>No proper coordinate string selected.
Please select a complete coordinate string and try again.</value>
  </data>
  <data name="NumberFunctions" xml:space="preserve">
    <value>Number Functions</value>
  </data>
  <data name="OtherNames" xml:space="preserve">
    <value>Other Names</value>
  </data>
  <data name="PiMaxDigits" xml:space="preserve">
    <value>Pi: Maximum digits: 1000</value>
  </data>
  <data name="PiMinDigits" xml:space="preserve">
    <value>Pi: Argument out of range: (0 - 1000)</value>
  </data>
  <data name="SelectWaypoint" xml:space="preserve">
    <value>Select Waypoint</value>
  </data>
  <data name="Solve" xml:space="preserve">
    <value>Solve</value>
  </data>
  <data name="TextFunctions" xml:space="preserve">
    <value>Text Functions</value>
  </data>
  <data name="TooManyArguments" xml:space="preserve">
    <value>{0}: To much arguments. (Max. {1})</value>
  </data>
  <data name="TrigGroup" xml:space="preserve">
    <value>Trigonometric functions</value>
  </data>
  <data name="UnknownFunction" xml:space="preserve">
    <value>Unknown function:</value>
  </data>
  <data name="UnknownFunctionGroup" xml:space="preserve">
    <value>Unknown Function Group</value>
  </data>
  <data name="ValueOutOfRange" xml:space="preserve">
    <value>{0}: Value out of range. ({1} - {2})</value>
  </data>
  <data name="Waypoints" xml:space="preserve">
    <value>Waypoints</value>
  </data>
  <data name="FormulaSolverHelp" xml:space="preserve">
    <value>Formula Solver Help</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Waypoint" xml:space="preserve">
    <value>Waypoint</value>
  </data>
  <data name="PresentInCollection" xml:space="preserve">
    <value>Present in collection</value>
  </data>
  <data name="Collection" xml:space="preserve">
    <value>Collection</value>
  </data>
  <data name="GeocacheCollections" xml:space="preserve">
    <value>Geocache collections</value>
  </data>
  <data name="InstallMacroForAddToCollection" xml:space="preserve">
    <value>Install macro for add to collection</value>
  </data>
  <data name="AddToGeocacheCollection" xml:space="preserve">
    <value>Add to geocache collection</value>
  </data>
  <data name="AddActiveGeocache" xml:space="preserve">
    <value>Add active geocache</value>
  </data>
  <data name="AddUserFlaggedGeocaches" xml:space="preserve">
    <value>Add User Flagged geocaches</value>
  </data>
  <data name="ExportExcel" xml:space="preserve">
    <value>Export Excel</value>
  </data>
  <data name="GeocacheName" xml:space="preserve">
    <value>Geocache name</value>
  </data>
  <data name="Fields" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Sheets" xml:space="preserve">
    <value>Sheets</value>
  </data>
  <data name="Bearing" xml:space="preserve">
    <value>Bearing</value>
  </data>
  <data name="GeocacheId" xml:space="preserve">
    <value>Geocache Id</value>
  </data>
  <data name="Degrees" xml:space="preserve">
    <value>Degrees</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Distance</value>
  </data>
  <data name="DNF" xml:space="preserve">
    <value>DNF</value>
  </data>
  <data name="Container" xml:space="preserve">
    <value>Container</value>
  </data>
  <data name="DNFDate" xml:space="preserve">
    <value>DNF date</value>
  </data>
  <data name="OwnerId" xml:space="preserve">
    <value>Owner id</value>
  </data>
  <data name="LastLog" xml:space="preserve">
    <value>Last log</value>
  </data>
  <data name="UserData" xml:space="preserve">
    <value>User data</value>
  </data>
  <data name="UserData2" xml:space="preserve">
    <value>User data 2</value>
  </data>
  <data name="UserData3" xml:space="preserve">
    <value>User data 3</value>
  </data>
  <data name="UserData4" xml:space="preserve">
    <value>User data 4</value>
  </data>
  <data name="SmartName" xml:space="preserve">
    <value>Smart name</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="LatOriginal" xml:space="preserve">
    <value>Original latitude</value>
  </data>
  <data name="LinkedTo" xml:space="preserve">
    <value>Linked to</value>
  </data>
  <data name="LonOriginal" xml:space="preserve">
    <value>Original longitude</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>Resolution</value>
  </data>
  <data name="Guid" xml:space="preserve">
    <value>Guid</value>
  </data>
  <data name="Hints" xml:space="preserve">
    <value>Hints</value>
  </data>
  <data name="LongDescription" xml:space="preserve">
    <value>Long description</value>
  </data>
  <data name="ShortDescription" xml:space="preserve">
    <value>Short description</value>
  </data>
  <data name="TravelBugs" xml:space="preserve">
    <value>Travel bugs</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="UserNote" xml:space="preserve">
    <value>User note</value>
  </data>
  <data name="Coordinates" xml:space="preserve">
    <value>Coordinates</value>
  </data>
  <data name="CorrectedCoordinates" xml:space="preserve">
    <value>Corrected coordinates</value>
  </data>
  <data name="Geocaches" xml:space="preserve">
    <value>Geocaches</value>
  </data>
  <data name="AddShapeFile" xml:space="preserve">
    <value>Add shapefile...</value>
  </data>
  <data name="ShapeFiles" xml:space="preserve">
    <value>Shapefiles</value>
  </data>
  <data name="Areas" xml:space="preserve">
    <value>Areas</value>
  </data>
  <data name="AreaType" xml:space="preserve">
    <value>Area type</value>
  </data>
  <data name="CoordType" xml:space="preserve">
    <value>Coord. type</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Encoding" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="Prefix" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="ShapefileTest" xml:space="preserve">
    <value>Shapefile Test</value>
  </data>
  <data name="TableName" xml:space="preserve">
    <value>Table name</value>
  </data>
  <data name="TestShapeFile" xml:space="preserve">
    <value>Test shapefile...</value>
  </data>
  <data name="LocatedInArea" xml:space="preserve">
    <value>Located in area</value>
  </data>
</root>